/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Misc.Order;

import Transactions.Sale.*;
import Transactions.*;
import java.awt.Color;
import java.awt.Component;

import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JDesktopPane;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author bansal
 */
public class order_transactions extends javax.swing.JInternalFrame implements CellEditorListener{


static String aname=null;
JDesktopPane pane=null;  /**
     * Creates new form SaleFatSnf
     */
    public order_transactions(JDesktopPane d ) throws SQLException, ParseException {    
        
        pane=d;
        initComponents();
          this.setTitle("Order Transaction");
         fillAList();
        table.getDefaultEditor(String.class).addCellEditorListener(this);
        
         pane.add(this);
    /*    String header[]={"Date","MorMilk","EveMilk","Ammount"};
        
        Object row[][]=new Object[30][];
        for(int i=0;i<30;i++){
            row[i]=new Object[]{new Date()+"","","",""};
       }
        DefaultTableModel dtm=new DefaultTableModel(row,header);
        JTable table=new JTable(dtm);
        table.setVisible(true);
        
        table.setBounds(50, 50, 400, 400);*/
    }

    
     public void fillAList(){
      try{  alist.clear();
         Dao.order_account acc=new Dao.order_account();
        ArrayList<Dao.order_account> al=acc.returnAccounts();
         Iterator<Dao.order_account> iterator=al.iterator();
         while(iterator.hasNext()){
             alist.add(iterator.next().getAname());
         }
    }catch(Exception e){e.printStackTrace();
        
    }}
   
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable(){

            public boolean isCellEditable(int row,int column) {
                if(column==0||column ==4) // specify this depending upon ur requirement. Here the cell 2,3 is not editable.
                return false;
                else
                return true;
            }
            public Component prepareRenderer
            (TableCellRenderer renderer,int Index_row, int Index_col) {
                Component comp = super.prepareRenderer(renderer, Index_row, Index_col);
                //even index, selected or not selected
                if (Index_row % 2 != 0 && !isCellSelected(Index_row, Index_col)) {
                    comp.setBackground(new Color(255, 228, 196));
                }
                else {
                    comp.setBackground(Color.white);
                }
                return comp;
            }

        };
        save = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        alist = new java.awt.List();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        report = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);

        jPanel1.setBackground(new java.awt.Color(255, 228, 196));

        Object row[][]=new Object[20][];

        for(int i=0;i<20;i++){
            row[i]=new Object[]{new Integer((i+1)),"","","",""};
        }
        table.setModel(new javax.swing.table.DefaultTableModel(
            row,
            new String [] {
                "Item no","Item Name","Rate","Quantity","Ammount"
            }
        ));
        table.setShowGrid(true);
        for(int i=0;i<table.getRowCount();i++){
            table.setRowHeight(30);
        }
        table.setCellSelectionEnabled(true);
        table.setSelectionBackground(new java.awt.Color(255, 228, 196));
        table.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tableFocusLost(evt);
            }
        });
        table.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        save.setText("Update");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        alist.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                alistItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Orders");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Order's Transactions");

        report.setText("Report");
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(save)
                .addGap(28, 28, 28)
                .addComponent(exit)
                .addGap(43, 43, 43)
                .addComponent(report)
                .addGap(121, 121, 121))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(alist, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alist, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exit)
                    .addComponent(save)
                    .addComponent(report))
                .addGap(75, 75, 75))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tablePropertyChange

      
// TODO add your handling code here:
    }//GEN-LAST:event_tablePropertyChange

    private void tableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tableFocusLost


        
// TODO add your handling code here:
    }//GEN-LAST:event_tableFocusLost

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
    try {
        
            int rows=table.getRowCount();
            ArrayList<Dao.order_transactions> entries=new ArrayList<Dao.order_transactions>();
            
        for(int i=0;i<rows ;i++){
            Dao.order_transactions aaa=new Dao.order_transactions();
            aaa.setAname(aname);
            
            try{
                  if(table.getValueAt(i, 0) instanceof Integer)
                      aaa.setItem_no((int)table.getValueAt(i, 0));
                   
            }catch(Exception e){
                e.printStackTrace();
               
            }
            
            try{
                
                aaa.setItem_name((String)table.getValueAt(i, 1));
            }catch(Exception e){
                e.printStackTrace();
                aaa.setItem_name("");
            }
            
            try{
              if(table.getValueAt(i, 2) instanceof String)
              {     if(table.getValueAt(i, 2).equals("")){aaa.setRate(0);}
                     else
                      aaa.setRate(Float.parseFloat((String)table.getValueAt(i, 2)));
                  
            }else if(table.getValueAt(i, 2) instanceof Float)
                aaa.setRate((float)table.getValueAt(i, 2));
            }catch(Exception e){
                e.printStackTrace();
                
            }
            
            try{
                   if(table.getValueAt(i, 3) instanceof String)
              {     if(table.getValueAt(i, 3).equals("")){aaa.setQuantity(0);}
                     else
                      aaa.setQuantity(Float.parseFloat((String)table.getValueAt(i, 3)));
                  
            }else if(table.getValueAt(i, 3) instanceof Float)
                aaa.setQuantity((float)table.getValueAt(i, 3));
            }catch(Exception e){
                e.printStackTrace();
                
            }
            
             aaa.setAmmount((aaa.getRate()*aaa.getQuantity()));
              entries.add(aaa);
            
        }
           
           Dao.order_transactions or=new Dao.order_transactions();
           or.add(entries);
           System.out.println(aname);
      
                
    }catch(Exception e){e.printStackTrace();}
    finally{
        
    }
// TODO add your handling code here:
    }//GEN-LAST:event_saveActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_exitActionPerformed

    private void alistItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_alistItemStateChanged
try{
    aname=alist.getSelectedItem();
    clearTable();
     fillTable();
}catch(Exception e){
    e.printStackTrace();
}
    // TODO add your handling code here:
    }//GEN-LAST:event_alistItemStateChanged

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed

        
 Reports.order_bill order_bill=new Reports.order_bill(aname);


// TODO add your handling code here:
    }//GEN-LAST:event_reportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.List alist;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton report;
    private javax.swing.JButton save;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    @Override
    public void editingStopped(ChangeEvent e) {
    
    String item_name=(String)table.getValueAt(table.getSelectedRow(), 1);
    String rate=(String)table.getValueAt(table.getSelectedRow(), 2);
    String quantity=(String)table.getValueAt(table.getSelectedRow(), 3);
    String ammount=(String)table.getValueAt(table.getSelectedRow(), 4);
    
        
    float rate_=0;
    float quantity_=0;
    float ammount_=0;
    int i=0;
    try{
    if(rate.equals(""))rate_=0;
    else 
    rate_=Float.parseFloat(rate);
    }catch(Exception e1){
    rate_=0;
    table.setValueAt("", table.getSelectedRow(), 2);
    }
    
    try{
    if(quantity.equals(""))quantity_+=0;
    else 
    quantity_+=Float.parseFloat(quantity);
    }
    catch(Exception e2){
      quantity_+=0;
      table.setValueAt("", table.getSelectedRow(), 3);
    }
    
    
    
    DecimalFormat df = new DecimalFormat("##.##");
    table.setValueAt(df.format(rate_*quantity_), table.getSelectedRow(), 4);
    
    }
    
    
   
    

    


    

    private void fillTable() throws SQLException, ParseException {
       try{
    Dao.order_transactions a=new Dao.order_transactions();
    a.setAname(aname);
    
    
    ArrayList<Dao.order_transactions> aa=a.returnOrder_Transactions();
    Iterator<Dao.order_transactions> aaa=aa.iterator();
    
    DecimalFormat df = new DecimalFormat("##.##");
    while(aaa.hasNext()){
        
        Dao.order_transactions aaaa=aaa.next();
        
        int item_no=aaaa.getItem_no();
        float rate= aaaa.getRate();
        float quantity= aaaa.getQuantity();
        float amount= aaaa.getAmmount();
        table.setValueAt(aaaa.getItem_no(), (item_no-1), 0);
        table.setValueAt(aaaa.getItem_name(), (item_no-1), 1);
        table.setValueAt((rate==0.0)?"":df.format(rate), (item_no-1), 2);
        table.setValueAt((quantity==0.0)?"":df.format(quantity), (item_no-1), 3);
        table.setValueAt((amount==0)?"":df.format(amount), (item_no-1), 4);
    }}
    catch(Exception e){e.printStackTrace();
            
            }
    
    }

    @Override
    public void editingCanceled(ChangeEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public  void clearTable(){
        for(int i=0;i<table.getRowCount();i++){
             table.setValueAt((i+1), i, 0);
             for(int j=1;j<table.getColumnCount();j++){
                table.setValueAt("", i, j);
            }
        }
    }
}
