/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Reports;

import Enum.*;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.text.*;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author bansal
 */
public class Receive_List
        extends javax.swing.JInternalFrame {

    public static ArrayList<Dao.groups> group_list = new ArrayList<Dao.groups>();
    public static ArrayList<Dao.accounts> account_list = new ArrayList<Dao.accounts>();

    static int no_of_accounts = 0;

    /**
     * Creates new form SaleFatSnf
     */
    public Receive_List(JDesktopPane desktopPane) {
        initComponents();
        this.setTitle(MessageFormat.format(MessageEnum.LIST.getMessage(), constant.Constant.RECEIVE));
        fillGroupCacheNUI();
        desktopPane.add(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXDatePicker3 = new org.jdesktop.swingx.JXDatePicker();
        jPanel1 = new javax.swing.JPanel();
        receiveListLbl = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();
        glist = new java.awt.Choice();
        GROUP = new java.awt.Label();
        receiveListBtn = new javax.swing.JButton();
        endDate = new org.jdesktop.swingx.JXDatePicker();
        start_date = new java.awt.Label();
        end_date = new java.awt.Label();
        startDate = new org.jdesktop.swingx.JXDatePicker();
        compReceiveListBtn = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);

        jPanel1.setBackground(new java.awt.Color(255, 228, 196));

        receiveListLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        receiveListLbl.setText("RECEIVE LIST");

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        glist.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        glist.setForeground(new java.awt.Color(102, 102, 102));
        glist.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                glistItemStateChanged(evt);
            }
        });

        GROUP.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        GROUP.setText("Group");

        receiveListBtn.setText("Receive List");
        receiveListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiveListBtnActionPerformed(evt);
            }
        });

        start_date.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        start_date.setText("Start Date");

        end_date.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        end_date.setText("End Date");

        compReceiveListBtn.setText("Compacted Receive List");
        compReceiveListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compReceiveListBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(glist, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(GROUP, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(receiveListBtn)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(receiveListLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(start_date, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(end_date, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(compReceiveListBtn)
                                .addGap(46, 46, 46)
                                .addComponent(exitBtn)))))
                .addGap(19, 160, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(receiveListLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(start_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(end_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GROUP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(glist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiveListBtn)
                    .addComponent(compReceiveListBtn)
                    .addComponent(exitBtn))
                .addContainerGap(227, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        glist.removeAll();
        no_of_accounts = 0;
        this.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_exitBtnActionPerformed

    private void glistItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_glistItemStateChanged

// TODO add your handling code here:
    }//GEN-LAST:event_glistItemStateChanged

    private void receiveListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiveListBtnActionPerformed

        if (startDate == null) {
            JOptionPane.showMessageDialog(null, MessageFormat.format(MessageEnum.SELECT_DATE.getMessage(), constant.Constant.START));
        } else if (endDate == null) {
            JOptionPane.showMessageDialog(null, MessageFormat.format(MessageEnum.SELECT_DATE.getMessage(), constant.Constant.END));
        } else {
            String start_date = startDate.getDate().getYear() + constant.Constant.INTEGER_NINETEEN_HUNDRED + constant.Constant.FORWARD_SLASH + (startDate.getDate().getMonth() + constant.Constant.INTEGER_ONE) + constant.Constant.FORWARD_SLASH + startDate.getDate().getDate();
            String end_date = endDate.getDate().getYear() + constant.Constant.INTEGER_NINETEEN_HUNDRED + constant.Constant.FORWARD_SLASH + (endDate.getDate().getMonth() + constant.Constant.INTEGER_ONE) + constant.Constant.FORWARD_SLASH + endDate.getDate().getDate();

            try {

                Connection connection = null;
                Class.forName(constant.DBConstant.DRIVER_NAME);
                connection = DriverManager.getConnection(constant.DBConstant.CONNECTION_STRING, constant.DBConstant.SCHEMA_NAME, constant.DBConstant.SCHEMA_PASSWORD);
                HashMap parameter = new HashMap();
                parameter.put("GID", group_list.get(glist.getSelectedIndex()).getGid());
                parameter.put("START_DATE", start_date);
                parameter.put("END_DATE", end_date);
                JasperDesign jasDesign = JRXmlLoader.load(new File(constant.Constant.DOT).getCanonicalPath() + ReportEnum.RECEIVE_LIST.getReportName());
                JasperReport jasReport = JasperCompileManager.compileReport(jasDesign);
                JasperPrint Print = JasperFillManager.fillReport(jasReport, parameter, connection);
                JasperViewer.viewReport(Print, false);
                connection.close();
            } catch (Exception exception) {
             JOptionPane.showMessageDialog(null, exception.getMessage(), constant.ErrorType.DATABASE_ERROR, JOptionPane.ERROR_MESSAGE);
           }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_receiveListBtnActionPerformed

    private void compReceiveListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compReceiveListBtnActionPerformed

        if (startDate == null) {
            JOptionPane.showMessageDialog(null, MessageFormat.format(MessageEnum.SELECT_DATE.getMessage(), constant.Constant.START));
        } else if (endDate == null) {
            JOptionPane.showMessageDialog(null, MessageFormat.format(MessageEnum.SELECT_DATE.getMessage(), constant.Constant.END));
        } else {

            String start_d = startDate.getDate().getYear() + constant.Constant.INTEGER_NINETEEN_HUNDRED + constant.Constant.FORWARD_SLASH + (startDate.getDate().getMonth() + constant.Constant.INTEGER_ONE) + constant.Constant.FORWARD_SLASH + startDate.getDate().getDate();
            String end_d = endDate.getDate().getYear() + constant.Constant.INTEGER_NINETEEN_HUNDRED + constant.Constant.FORWARD_SLASH + (endDate.getDate().getMonth() + constant.Constant.INTEGER_ONE) + constant.Constant.FORWARD_SLASH + endDate.getDate().getDate();

            try {
                Connection connection = null;
                Class.forName(constant.DBConstant.DRIVER_NAME);
                connection = DriverManager.getConnection(constant.DBConstant.CONNECTION_STRING, constant.DBConstant.SCHEMA_NAME, constant.DBConstant.SCHEMA_PASSWORD);
                HashMap parameter = new HashMap();

                parameter.put("START_DATE", start_d);
                parameter.put("END_DATE", end_d);

                JasperDesign jasDesign = JRXmlLoader.load(new File(constant.Constant.DOT).getCanonicalPath() + ReportEnum.RECEIVE_LIST_COMPACT.getReportName());
                JasperReport jasReport = JasperCompileManager.compileReport(jasDesign);

                JasperPrint Print = JasperFillManager.fillReport(jasReport, parameter, connection);
                JasperViewer.viewReport(Print, false);
              connection.close();
            } catch (Exception exception) {
             JOptionPane.showMessageDialog(null, exception.getMessage(), constant.ErrorType.DATABASE_ERROR, JOptionPane.ERROR_MESSAGE);
                  }

        }
        // TODO a        // TODO add your handling code here:
    }//GEN-LAST:event_compReceiveListBtnActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label GROUP;
    private javax.swing.JButton compReceiveListBtn;
    private org.jdesktop.swingx.JXDatePicker endDate;
    private java.awt.Label end_date;
    private javax.swing.JButton exitBtn;
    private static java.awt.Choice glist;
    private javax.swing.JPanel jPanel1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker3;
    private javax.swing.JButton receiveListBtn;
    private static javax.swing.JLabel receiveListLbl;
    private org.jdesktop.swingx.JXDatePicker startDate;
    private java.awt.Label start_date;
    // End of variables declaration//GEN-END:variables

    public static void fillGroupCacheNUI() {
        Dao.groups group = new Dao.groups();
        group_list = group.returnGroups();
        for (int index = 0; index < group_list.size(); index++) {
            glist.addItem(group_list.get(index).getGname());
        }
    }

}
